name: ci

on:
  push:
    tags:
      - '*'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker registry
        uses: docker/login-action@v1 
        with:
          registry: registry.lennart-austenfeld.de
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and load image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: registry.lennart-austenfeld.de/tentris:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Push image
        run: docker push registry.lennart-austenfeld.de/tentris:latest
      - name: Checkout
        uses: actions/checkout@v1
      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
      - name: Echo
        run: echo ${{ steps.tag.outputs.result }}
      - name: Extract binaries
        run: ./.github/workflows/scripts/extract-binaries.sh registry.lennart-austenfeld.de/tentris:${{ steps.tag.outputs.result }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.result }}
          release_name: ${{ steps.tag.outputs.result }}
          draft: true
          prerelease: false
      - name: Upload tentris
        id: upload-tentris-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: tentris_clang9_libstdcxx9.zip
          asset_name: tentris_${{ steps.tag.outputs.result }}_clang9_libstdcxx9.zip
          asset_content_type: application/zip
      - name: Upload benchmarktools
        id: upload-benchmarktools-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: benchmarktools_clang9_libstdcxx9.zip
          asset_name: benchmarktools_${{ steps.tag.outputs.result }}_clang9_libstdcxx9.zip
          asset_content_type: application/zip
